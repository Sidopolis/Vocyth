import React, { Suspense, useState } from 'react';
import { motion } from 'framer-motion';
import Spline from '@splinetool/react-spline';

export default function Hero() {
  const [email, setEmail] = useState('');
  const [status, setStatus] = useState('idle'); // idle, loading, success, error
  const [errorMessage, setErrorMessage] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    setStatus('loading');

    try {
      // Show immediate feedback
      setStatus('sending');

      const response = await fetch('http://localhost:5000/api/waitlist', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      const data = await response.json();
      
      if (!response.ok) {
        throw new Error(data.message || 'Submission failed');
      }

      // Success state
      setStatus('success');
      setEmail('');
      
      // Reset success message after 3 seconds
      setTimeout(() => {
        setStatus('idle');
      }, 3000);

    } catch (error) {
      console.error('Error:', error);
      setStatus('error');
      
      // Reset error message after 3 seconds
      setTimeout(() => {
        setStatus('idle');
      }, 3000);
    }
  };

  return (
    <div className="relative min-h-screen overflow-hidden bg-black">
      {/* Spline Background */}
      <div className="absolute inset-0 w-full h-full scale-105 translate-y-[-2%]">
        <Suspense fallback={<div className="w-full h-full bg-black" />}>
          <Spline 
            scene="https://prod.spline.design/cO3ogYNCMyoDjKDh/scene.splinecode"
            className="w-full h-full"
            style={{
              transform: 'scale(1.15)',
              transformOrigin: 'center center',
            }}
          />
        </Suspense>
      </div>

      {/* Content Container */}
      <div className="relative z-10 pointer-events-none">
        <div className="max-w-7xl mx-auto px-6 lg:px-8 pt-32">
          <div className="max-w-3xl">
            {/* Introducing Badge */}
            <div className="inline-flex items-center px-4 py-2 mb-8 rounded-full 
                          bg-white/5 border border-white/10 backdrop-blur-sm">
              <span className="text-sm text-white/70">✨ Introducing VoiceAI</span>
            </div>

            {/* Main Heading */}
            <h1 className="space-y-2">
              <span className="block text-7xl font-light tracking-tight text-white">
                The next
              </span>
              <span className="block text-7xl font-light tracking-tight 
                             text-transparent bg-clip-text 
                             bg-gradient-to-r from-white via-white to-white/90">
                era of voice
              </span>
              <span className="block text-7xl font-light tracking-tight text-white">
                synthesis
              </span>
            </h1>

            {/* Description */}
            <p className="mt-6 text-xl text-white/80 max-w-xl leading-relaxed">
              Create ultra-realistic voices and natural conversations with
              our advanced AI. Experience the future of voice technology.
            </p>

            {/* Stats */}
            <div className="grid grid-cols-3 gap-1 mt-10">
              {[
                { value: '99.9%', label: 'Accuracy' },
                { value: '150+', label: 'Voices' },
                { value: '50M+', label: 'Daily API Calls' }
              ].map((stat, index) => (
                <div key={index}>
                  <div className="text-3xl font-light text-white mb-1">
                    {stat.value}
                  </div>
                  <div className="text-sm text-white/70">{stat.label}</div>
                </div>
              ))}
            </div>

            {/* CTA Section with Waitlist */}
            <div className="flex flex-col items-start gap-6 mt-12 pointer-events-auto">
              {/* Waitlist Form */}
              <form onSubmit={handleSubmit} className="flex items-center max-w-md relative">
                <input 
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  placeholder="Enter your email"
                  disabled={status === 'loading' || status === 'sending' || status === 'success'}
                  className="px-4 py-3 rounded-l-lg bg-white/5 border border-white/10
                           text-white placeholder-white/40 outline-none
                           focus:border-white/20 transition-colors w-64
                           disabled:opacity-50"
                  required
                />
                <button 
                  type="submit"
                  disabled={status === 'loading' || status === 'sending' || status === 'success'}
                  className="px-6 py-3 rounded-r-lg 
                           bg-white/10 hover:bg-white/15
                           border border-l-0 border-white/10 hover:border-white/20
                           text-white hover:text-white
                           transition-all duration-300
                           disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {status === 'sending' ? (
                    <>
                      <span className="inline-block animate-spin mr-2">⟳</span>
                      Joining...
                    </>
                  ) : status === 'success' ? (
                    <>
                      <span className="text-green-400 mr-2">✓</span>
                      Joined!
                    </>
                  ) : 'Join Waitlist'}
                </button>
              </form>

              {/* Status Messages */}
              {status === 'success' && (
                <div className="text-sm text-green-400 animate-fade-in">
                  Thanks for joining! Check your email for confirmation.
                </div>
              )}
              {status === 'error' && (
                <div className="text-sm text-red-400 animate-fade-in">
                  Something went wrong. Please try again.
                </div>
              )}

              {/* Rest of the content */}
              <button className="px-2 py-1 rounded-lg
                             text-white/80 hover:text-white
                             flex items-center gap-2
                             transition-colors duration-300">
                View Documentation
                <span className="text-lg">→</span>
              </button>
            </div>
          </div>
        </div>
      </div>

      <div className="absolute bottom-0 left-0 w-full h-40 bg-gradient-to-t from-black to-transparent" />
    </div>
  );
}